# Unified Server Stack - Nginx Configuration
# Professional portable web server with PHP, Node.js, and static file support

worker_processes auto;
error_log logs/nginx_error.log;
pid logs/nginx.pid;

events {
    worker_connections 1024;
    use select;
    multi_accept on;
}

http {
    include mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log logs/nginx_access.log main;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    
    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Upstream servers
    upstream php_backend {
        server 127.0.0.1:9000;
        keepalive 32;
    }
    
    upstream node_backend {
        server 127.0.0.1:3000;
        keepalive 32;
    }
    
    upstream admin_backend {
        server 127.0.0.1:3001;
        keepalive 32;
    }
    
    # HTTP Server (redirect to HTTPS)
    server {
        listen 8080;
        server_name localhost;
        
        # Redirect all HTTP to HTTPS
        return 301 https://$server_name:8443$request_uri;
    }
    
    # HTTPS Server
    server {
        listen 8443 ssl http2;
        server_name localhost;
        
        # SSL certificates
        ssl_certificate certs/server.crt;
        ssl_certificate_key certs/server.key;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Root directory
        root sites;
        index index.html index.php index.js;
        
        # Admin dashboard
        location /admin {
            proxy_pass http://admin_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        # API routes (Node.js)
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://node_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        # WebSocket support
        location /ws/ {
            proxy_pass http://node_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # PHP applications
        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass php_backend;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_read_timeout 300;
            fastcgi_send_timeout 300;
        }
        
        # Node.js applications (specific routes)
        location ~ ^/(node-demo|api-node)/ {
            proxy_pass http://node_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        # Static files with caching
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            access_log off;
        }
        
        # Video files with range support
        location ~* \.(mp4|webm|ogg|avi|mov|wmv|flv)$ {
            add_header Accept-Ranges bytes;
            add_header Cache-Control "public, max-age=31536000";
            add_header Vary Accept-Encoding;
        }
        
        # Audio files
        location ~* \.(mp3|wav|ogg|aac|flac)$ {
            add_header Accept-Ranges bytes;
            add_header Cache-Control "public, max-age=31536000";
            add_header Vary Accept-Encoding;
        }
        
        # ZIP and archive files
        location ~* \.(zip|tar|gz|rar|7z)$ {
            add_header Content-Disposition "attachment";
            add_header Cache-Control "public, max-age=3600";
        }
        
        # Default static file serving
        location / {
            try_files $uri $uri/ @fallback;
        }
        
        # Fallback for SPA applications
        location @fallback {
            try_files $uri $uri/ /index.html;
        }
        
        # Security: Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Security: Deny access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Security: Deny access to config files
        location ~ \.(ini|conf|config|log)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # Additional server blocks for specific sites
    # You can add more server blocks here for different domains or subdomains
}